"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/GameCanvas.tsx":
/*!***************************************!*\
  !*** ./src/components/GameCanvas.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameCanvas)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction GameCanvas(param) {\n    let { playerName } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [gameLoop, setGameLoop] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [player, setPlayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0,\n        width: 50,\n        height: 50,\n        speed: 5,\n        name: playerName,\n        score: 0,\n        bullets: []\n    });\n    const [enemies, setEnemies] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [keys, setKeys] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [isGameOver, setIsGameOver] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Check collision between two objects\n    const checkCollision = (obj1, obj2)=>{\n        return obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x && obj1.y < obj2.y + obj2.height && obj1.y + obj1.height > obj2.y;\n    };\n    // Initialize game\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GameCanvas.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            // Set canvas size\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n            // Center player initially\n            setPlayer({\n                \"GameCanvas.useEffect\": (prev)=>({\n                        ...prev,\n                        x: canvas.width / 2 - 25,\n                        y: canvas.height - 100\n                    })\n            }[\"GameCanvas.useEffect\"]);\n            // Handle keyboard input\n            const handleKeyDown = {\n                \"GameCanvas.useEffect.handleKeyDown\": (e)=>{\n                    setKeys({\n                        \"GameCanvas.useEffect.handleKeyDown\": (prev)=>({\n                                ...prev,\n                                [e.key]: true\n                            })\n                    }[\"GameCanvas.useEffect.handleKeyDown\"]);\n                    if (e.key === ' ') {\n                        shoot();\n                    }\n                    // Reset game on Enter if game over\n                    if (e.key === 'Enter' && isGameOver) {\n                        resetGame();\n                    }\n                }\n            }[\"GameCanvas.useEffect.handleKeyDown\"];\n            const handleKeyUp = {\n                \"GameCanvas.useEffect.handleKeyUp\": (e)=>{\n                    setKeys({\n                        \"GameCanvas.useEffect.handleKeyUp\": (prev)=>({\n                                ...prev,\n                                [e.key]: false\n                            })\n                    }[\"GameCanvas.useEffect.handleKeyUp\"]);\n                }\n            }[\"GameCanvas.useEffect.handleKeyUp\"];\n            window.addEventListener('keydown', handleKeyDown);\n            window.addEventListener('keyup', handleKeyUp);\n            // Start game loop\n            const loop = window.requestAnimationFrame(gameUpdate);\n            setGameLoop(loop);\n            // Cleanup\n            return ({\n                \"GameCanvas.useEffect\": ()=>{\n                    window.removeEventListener('keydown', handleKeyDown);\n                    window.removeEventListener('keyup', handleKeyUp);\n                    if (gameLoop) window.cancelAnimationFrame(gameLoop);\n                }\n            })[\"GameCanvas.useEffect\"];\n        }\n    }[\"GameCanvas.useEffect\"], [\n        isGameOver\n    ]);\n    // Reset game state\n    const resetGame = ()=>{\n        setIsGameOver(false);\n        setPlayer((prev)=>({\n                ...prev,\n                score: 0,\n                bullets: [],\n                x: window.innerWidth / 2 - 25,\n                y: window.innerHeight - 100\n            }));\n        setEnemies([]);\n    };\n    // Game update function\n    const gameUpdate = ()=>{\n        const canvas = canvasRef.current;\n        if (!canvas || isGameOver) return;\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n        // Clear canvas\n        ctx.fillStyle = 'black';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        // Update game objects\n        updatePlayer();\n        updateBullets();\n        updateEnemies();\n        // Draw everything\n        drawGame(ctx);\n        // Continue game loop\n        window.requestAnimationFrame(gameUpdate);\n    };\n    // Update player position\n    const updatePlayer = ()=>{\n        if (isGameOver) return;\n        setPlayer((prev)=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return prev;\n            let newX = prev.x;\n            let newY = prev.y;\n            if (keys['ArrowLeft'] || keys['a']) newX -= prev.speed;\n            if (keys['ArrowRight'] || keys['d']) newX += prev.speed;\n            if (keys['ArrowUp'] || keys['w']) newY -= prev.speed;\n            if (keys['ArrowDown'] || keys['s']) newY += prev.speed;\n            // Keep player within bounds\n            newX = Math.max(0, Math.min(canvas.width - prev.width, newX));\n            newY = Math.max(0, Math.min(canvas.height - prev.height, newY));\n            return {\n                ...prev,\n                x: newX,\n                y: newY\n            };\n        });\n    };\n    // Shoot bullet\n    const shoot = ()=>{\n        if (isGameOver) return;\n        setPlayer((prev)=>({\n                ...prev,\n                bullets: [\n                    ...prev.bullets,\n                    {\n                        x: prev.x + prev.width / 2 - 2.5,\n                        y: prev.y,\n                        width: 5,\n                        height: 10,\n                        speed: 10,\n                        active: true\n                    }\n                ]\n            }));\n    };\n    // Update bullets and check collisions\n    const updateBullets = ()=>{\n        if (isGameOver) return;\n        setPlayer((prev)=>{\n            const updatedBullets = prev.bullets.map((bullet)=>({\n                    ...bullet,\n                    y: bullet.y - bullet.speed\n                })).filter((bullet)=>{\n                // Check collision with enemies\n                let hasCollided = false;\n                setEnemies((enemies)=>{\n                    const updatedEnemies = enemies.filter((enemy)=>{\n                        if (!hasCollided && checkCollision(bullet, enemy)) {\n                            hasCollided = true;\n                            // Update score when enemy is hit\n                            setPlayer((p)=>({\n                                    ...p,\n                                    score: p.score + 10\n                                }));\n                            return false // Remove the enemy\n                            ;\n                        }\n                        return true;\n                    });\n                    return updatedEnemies;\n                });\n                // Keep bullets that haven't collided and are still on screen\n                return !hasCollided && bullet.y > -bullet.height;\n            });\n            return {\n                ...prev,\n                bullets: updatedBullets\n            };\n        });\n    };\n    // Spawn enemies\n    const spawnEnemy = ()=>{\n        if (isGameOver) return;\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const enemy = {\n            x: Math.random() * (canvas.width - 40),\n            y: -50,\n            width: 40,\n            height: 40,\n            speed: 2 + Math.floor(player.score / 100) * 0.5,\n            health: 1\n        };\n        setEnemies((prev)=>[\n                ...prev,\n                enemy\n            ]);\n    };\n    // Update enemies with improved movement\n    const updateEnemies = ()=>{\n        if (isGameOver) return;\n        // Spawn new enemy with increasing frequency based on score\n        const spawnChance = Math.min(0.02 + player.score / 5000, 0.1);\n        if (Math.random() < spawnChance) {\n            spawnEnemy();\n        }\n        setEnemies((prev)=>prev.map((enemy)=>{\n                // Add slight horizontal movement\n                const dx = Math.sin(Date.now() / 1000 + enemy.x) * 2;\n                return {\n                    ...enemy,\n                    x: Math.max(0, Math.min(window.innerWidth - enemy.width, enemy.x + dx)),\n                    y: enemy.y + enemy.speed\n                };\n            }).filter((enemy)=>{\n                // Check collision with player\n                if (checkCollision(enemy, player)) {\n                    setIsGameOver(true);\n                    return false;\n                }\n                return enemy.y < window.innerHeight;\n            }));\n    };\n    // Draw game objects\n    const drawGame = (ctx)=>{\n        // Draw player\n        ctx.fillStyle = '#00ff00';\n        ctx.fillRect(player.x, player.y, player.width, player.height);\n        // Draw bullets\n        ctx.fillStyle = '#ffff00';\n        player.bullets.forEach((bullet)=>{\n            ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);\n        });\n        // Draw enemies\n        ctx.fillStyle = '#ff0000';\n        enemies.forEach((enemy)=>{\n            ctx.fillRect(enemy.x, enemy.y, enemy.width, enemy.height);\n        });\n        // Draw score\n        ctx.fillStyle = 'white';\n        ctx.font = '20px Arial';\n        ctx.fillText(\"Score: \".concat(player.score), 10, 30);\n        // Draw game over screen\n        if (isGameOver) {\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.font = '48px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('Game Over!', ctx.canvas.width / 2, ctx.canvas.height / 2 - 50);\n            ctx.font = '24px Arial';\n            ctx.fillText(\"Final Score: \".concat(player.score), ctx.canvas.width / 2, ctx.canvas.height / 2);\n            ctx.fillText('Press Enter to Play Again', ctx.canvas.width / 2, ctx.canvas.height / 2 + 50);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        className: \"w-full h-full bg-black\"\n    }, void 0, false, {\n        fileName: \"/project/sandbox/user-workspace/src/components/GameCanvas.tsx\",\n        lineNumber: 313,\n        columnNumber: 5\n    }, this);\n}\n_s(GameCanvas, \"bLLYx5P3lff7ekbt6gROwAgkaFg=\");\n_c = GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/GameCanvas.tsx\n"));

/***/ })

});